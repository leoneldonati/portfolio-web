---
import { Image } from "astro:assets";
import { IconBrandGithub, IconAppWindow } from "@tabler/icons-react";
import TecnologyTag from "./tecnology-tag.astro";
import { colorFrom } from "../utils/colors";

interface Props {
  title: string;
  description: string;
  deployUrl: string | null;
  githubUrl: string | null;
  image: ImageMetadata;
  tags: string[];
}

const { title, description, image, githubUrl, deployUrl, tags } = Astro.props;

const hasNotDeploy = deployUrl == null;
const hasNotRepo = githubUrl == null;
---

<article
  class="flex flex-col md:flex-row gap-2 backdrop-blur rounded p-2"
  id="article"
>
  <div id="images-proyect">
    {
      image && (
        <Image
          src={image}
          alt="Imagen de proyecto 1"
          width={image?.width}
          height={image?.height}
          loading="lazy"
          class="transition opacity-90 aspect-video object-cover rounded-md max-w-full"
          id="image"
        />
      )
    }

    <div
      class="absolute bottom-6 w-full flex flex-row justify-center gap-2 md:opacity-0 md:translate-y-10 transition"
      id="links-buttons"
    >
      <a
        href={githubUrl}
        rel="noreferrer noopener"
        target="_blank"
        title="Ir al repositorio."
        style=`display: ${hasNotRepo ? 'none' : 'flex'};`
        class="bg-sky-500 text-white px-3 py-1 rounded-md flex gap-1 items-center transition shadow-sm shadow-transparent hover:shadow-sky-100"
        ><IconBrandGithub />GitHub</a
      >
      <a
        href={deployUrl}
        rel="noreferrer noopener"
        target="_blank"
        title="Ir al live."
        class="bg-sky-500 text-white px-3 py-1 rounded-md gap-1 items-center transition shadow-sm shadow-transparent hover:shadow-sky-100"
        style=`display: ${hasNotDeploy ? 'none' : 'flex'};`
        ><IconAppWindow />Deploy</a
      >
    </div>
  </div>

  <div class="text-white flex flex-col items-start justify-start gap-2">
    <h3 class="text-2xl font-bold">
      {title}
    </h3>

    <div class="flex flex-row items-center gap-2">
      {
        tags.map((tag) => (
          <TecnologyTag color={colorFrom(tag)} textColor="#FFF">
            {tag}
          </TecnologyTag>
        ))
      }
    </div>

    <p class="font-semibold">
      {description}
    </p>
  </div>
</article>
<style>
  #article {
    display: flex;
    flex-flow: row;
    &:hover #links-buttons {
      opacity: 1;
      transform: translateY(0);
    }
    &:hover #image {
      opacity: 0.8;
    }
    @media (max-width: 780px) {
      flex-flow: column;
      max-width: 80%;
      margin: 0 auto;
    }
    @media (max-width: 380px) {
      max-width: 90%;
    }
  }
  #images-proyect {
    max-width: 50%;
    position: relative;
    overflow: hidden;
    margin-top: 10px;
    &:hover {
      box-shadow: inset 0 0 20px rgba(99, 99, 99, 0.3);
    }

    @media (max-width: 780px) {
      max-width: 100%;
    }
  }
</style>
