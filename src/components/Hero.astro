---
import { Image } from "astro:assets";
import svg from "../../public/svg-img.svg";
import arrowSvg from "../../public/mouse-filled.svg"
---

<section class="hero">
  <div>
    <h1>
      Hi, I'm Leonel.
      <span class="title-accent">
        I build for the <span class="title-word">web.</span>
      </span>
    </h1>

    <p>
      I'm <strong>JavaScript Web Developer</strong>.
    </p>
    <p>
      Currently, I focused on developing <strong
        >accessible, visually attractive and high-impact</strong
      > products.
    </p>
  </div>

  <picture>
    <Image src={svg} loading="lazy" alt="Svg hero" width={400} height={400} class="hero-svg" />
  </picture>

  <picture 
    class="arrow-svg"
  >
    <Image 
      src={arrowSvg}
      alt="arrow svg"
      width={50}
      height={50}
      loading="lazy"
    />
    <span>Scroll</span>
  </picture>
</section>

<style>
  section {
    position: relative;
    min-height: 100vh;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: space-between;
    text-align: left;
  }
 
  .arrow-svg {
    position: absolute;
    display: grid;
    place-items: center;
    bottom: 5%;
    left: 50%;
    right: 50%;
    animation: mouse 1s 1s infinite alternate cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  @keyframes mouse {
    from {
      transform: translateY(0);
    }
    to {
      transform: translateY(.4em);
    }
  }

  .hero-svg {
    fill: var(--color-2);
  }

  h1 {
    font-size: var(--title-size);
    text-overflow: ellipsis;
    display: flex;
    flex-flow: column;
  }

  p {
    max-width: 40ch;
    font-size: var(--paragraph-size);
    color: var(--color-1);
    line-height: 1.4;
  }

  .title-accent {
    color: var(--color-2);
  }
  .title-word {
    display: block;
  }

  @media (max-width: 904px) {   
    .hero-svg {
      display: none;
    }
  }
</style>
<script>
  const $wordContainer = document.querySelector(".title-word") as HTMLElement;
  const words = ["web.", "user."];

  let s = false;

  function changeWords() {
    s = !s;
    $wordContainer.innerText = s ? words[1] : words[0];
  }
  setInterval(changeWords, 3000);
</script>
